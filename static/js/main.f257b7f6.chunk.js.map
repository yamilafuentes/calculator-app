{"version":3,"sources":["DigitButton.js","OperationButton.js","App.js","reportWebVitals.js","index.js"],"names":["DigitButton","_ref","dispatch","digit","react_default","a","createElement","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","overwrite","Object","objectSpread","currentOperand","includes","concat","previousOperand","evaluate","length","slice","_ref2","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","undefined","_operand$split","split","_operand$split2","slicedToArray","integer","decimal","format","App","_useReducer","useReducer","_useReducer2","_useReducer2$","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f257b7f6.chunk.js","sourcesContent":["import React from 'react';\nimport { ACTIONS } from \"./App\";\n\nexport default function DigitButton({ dispatch, digit }) {\n    return (\n        <button onClick={() => dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit }})}>\n            {digit}\n        </button>\n    )\n}","import React from 'react';\nimport { ACTIONS } from \"./App\";\n\nexport default function OperationButton({ dispatch, operation }) {\n    return (\n        <button onClick={() => dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: { operation }})}>\n            {operation}\n        </button>\n    )\n}","import React from 'react';\nimport './styles.css' \nimport './App.css';\nimport { useReducer } from 'react';\nimport DigitButton from './DigitButton';\nimport OperationButton from './OperationButton';\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit', \n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate'\n}\n\nfunction reducer(state, {type, payload}) {\n  switch(type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n\n      if (payload.digit === '0' && state.currentOperand === '0') {\n        return state\n      }\n      if (payload.digit === '.' && state.currentOperand.includes('.')) {\n        return state\n      } \n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      }\n\n    case ACTIONS.CLEAR:\n      return {}\n\n    case ACTIONS.DELETE_DIGIT: \n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null \n        }\n      }\n      if (state.currentOperand === null) return state\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null}\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      }\n\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation === null || \n        state.currentOperand === null ||\n        state.previousOperand === null \n      ) {\n        return state\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      }\n  }\n}\n\nfunction evaluate ({currentOperand, previousOperand, operation}) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current \n      break \n    case \"-\":\n      computation = prev - current \n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"รท\":\n      computation = prev / current\n      break\n  }\n\n  return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\n\nfunction formatOperand(operand) {\n\n  if (operand === null || operand === undefined) return \n\n  const [integer, decimal] = operand.split('.') \n\n  if (decimal === null || decimal === undefined) return INTEGER_FORMATTER.format(integer) \n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction App() {\n  const [{currentOperand, previousOperand, operation}, dispatch] = useReducer(reducer, {})\n\n  return (\n    <div className='calculator-grid'>\n      <div className='output'>\n        <div className='previous-operand'>{formatOperand(previousOperand)} {operation}</div>\n        <div className='current-operand'>{formatOperand(currentOperand)}</div>\n      </div>\n      <button className='span-two' onClick={() => dispatch({ type: ACTIONS.CLEAR })}>AC</button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>DEL</button>\n      <OperationButton operation='รท' dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation='*' dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation='+' dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation='-' dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button className='span-two' onClick={() => dispatch({ type: ACTIONS.EVALUATE})}>=</button>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}